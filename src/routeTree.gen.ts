/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardShopRouteImport } from './routes/dashboard/shop'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardApplicationsRouteImport } from './routes/dashboard/applications'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as DashboardOrdersIndexRouteImport } from './routes/dashboard/orders/index'
import { Route as DashboardUsersVendorsRouteImport } from './routes/dashboard/users/vendors'
import { Route as DashboardUsersDriversRouteImport } from './routes/dashboard/users/drivers'
import { Route as DashboardUsersCustomersRouteImport } from './routes/dashboard/users/customers'
import { Route as DashboardUsersAdminsRouteImport } from './routes/dashboard/users/admins'
import { Route as DashboardProductsMy_productsRouteImport } from './routes/dashboard/products/my_products'
import { Route as DashboardProductsCategoryRouteImport } from './routes/dashboard/products/category'
import { Route as DashboardProductsAddRouteImport } from './routes/dashboard/products/add'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardShopRoute = DashboardShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardApplicationsRoute = DashboardApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => DashboardRoute,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardOrdersIndexRoute = DashboardOrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersVendorsRoute = DashboardUsersVendorsRouteImport.update({
  id: '/users/vendors',
  path: '/users/vendors',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersDriversRoute = DashboardUsersDriversRouteImport.update({
  id: '/users/drivers',
  path: '/users/drivers',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersCustomersRoute = DashboardUsersCustomersRouteImport.update({
  id: '/users/customers',
  path: '/users/customers',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersAdminsRoute = DashboardUsersAdminsRouteImport.update({
  id: '/users/admins',
  path: '/users/admins',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProductsMy_productsRoute =
  DashboardProductsMy_productsRouteImport.update({
    id: '/products/my_products',
    path: '/products/my_products',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProductsCategoryRoute =
  DashboardProductsCategoryRouteImport.update({
    id: '/products/category',
    path: '/products/category',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProductsAddRoute = DashboardProductsAddRouteImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/checkout': typeof CheckoutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/products': typeof ProductsIndexRoute
  '/dashboard/products/add': typeof DashboardProductsAddRoute
  '/dashboard/products/category': typeof DashboardProductsCategoryRoute
  '/dashboard/products/my_products': typeof DashboardProductsMy_productsRoute
  '/dashboard/users/admins': typeof DashboardUsersAdminsRoute
  '/dashboard/users/customers': typeof DashboardUsersCustomersRoute
  '/dashboard/users/drivers': typeof DashboardUsersDriversRoute
  '/dashboard/users/vendors': typeof DashboardUsersVendorsRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/checkout': typeof CheckoutRoute
  '/contact': typeof ContactRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard': typeof DashboardIndexRoute
  '/products': typeof ProductsIndexRoute
  '/dashboard/products/add': typeof DashboardProductsAddRoute
  '/dashboard/products/category': typeof DashboardProductsCategoryRoute
  '/dashboard/products/my_products': typeof DashboardProductsMy_productsRoute
  '/dashboard/users/admins': typeof DashboardUsersAdminsRoute
  '/dashboard/users/customers': typeof DashboardUsersCustomersRoute
  '/dashboard/users/drivers': typeof DashboardUsersDriversRoute
  '/dashboard/users/vendors': typeof DashboardUsersVendorsRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/checkout': typeof CheckoutRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/dashboard/products/add': typeof DashboardProductsAddRoute
  '/dashboard/products/category': typeof DashboardProductsCategoryRoute
  '/dashboard/products/my_products': typeof DashboardProductsMy_productsRoute
  '/dashboard/users/admins': typeof DashboardUsersAdminsRoute
  '/dashboard/users/customers': typeof DashboardUsersCustomersRoute
  '/dashboard/users/drivers': typeof DashboardUsersDriversRoute
  '/dashboard/users/vendors': typeof DashboardUsersVendorsRoute
  '/dashboard/orders/': typeof DashboardOrdersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/checkout'
    | '/contact'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/applications'
    | '/dashboard/settings'
    | '/dashboard/shop'
    | '/dashboard/'
    | '/products'
    | '/dashboard/products/add'
    | '/dashboard/products/category'
    | '/dashboard/products/my_products'
    | '/dashboard/users/admins'
    | '/dashboard/users/customers'
    | '/dashboard/users/drivers'
    | '/dashboard/users/vendors'
    | '/dashboard/orders'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/checkout'
    | '/contact'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/applications'
    | '/dashboard/settings'
    | '/dashboard/shop'
    | '/dashboard'
    | '/products'
    | '/dashboard/products/add'
    | '/dashboard/products/category'
    | '/dashboard/products/my_products'
    | '/dashboard/users/admins'
    | '/dashboard/users/customers'
    | '/dashboard/users/drivers'
    | '/dashboard/users/vendors'
    | '/dashboard/orders'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/checkout'
    | '/contact'
    | '/dashboard'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/dashboard/applications'
    | '/dashboard/settings'
    | '/dashboard/shop'
    | '/dashboard/'
    | '/products/'
    | '/dashboard/products/add'
    | '/dashboard/products/category'
    | '/dashboard/products/my_products'
    | '/dashboard/users/admins'
    | '/dashboard/users/customers'
    | '/dashboard/users/drivers'
    | '/dashboard/users/vendors'
    | '/dashboard/orders/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CheckoutRoute: typeof CheckoutRoute
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/shop': {
      id: '/dashboard/shop'
      path: '/shop'
      fullPath: '/dashboard/shop'
      preLoaderRoute: typeof DashboardShopRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/applications': {
      id: '/dashboard/applications'
      path: '/applications'
      fullPath: '/dashboard/applications'
      preLoaderRoute: typeof DashboardApplicationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/orders/': {
      id: '/dashboard/orders/'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users/vendors': {
      id: '/dashboard/users/vendors'
      path: '/users/vendors'
      fullPath: '/dashboard/users/vendors'
      preLoaderRoute: typeof DashboardUsersVendorsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users/drivers': {
      id: '/dashboard/users/drivers'
      path: '/users/drivers'
      fullPath: '/dashboard/users/drivers'
      preLoaderRoute: typeof DashboardUsersDriversRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users/customers': {
      id: '/dashboard/users/customers'
      path: '/users/customers'
      fullPath: '/dashboard/users/customers'
      preLoaderRoute: typeof DashboardUsersCustomersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users/admins': {
      id: '/dashboard/users/admins'
      path: '/users/admins'
      fullPath: '/dashboard/users/admins'
      preLoaderRoute: typeof DashboardUsersAdminsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/products/my_products': {
      id: '/dashboard/products/my_products'
      path: '/products/my_products'
      fullPath: '/dashboard/products/my_products'
      preLoaderRoute: typeof DashboardProductsMy_productsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/products/category': {
      id: '/dashboard/products/category'
      path: '/products/category'
      fullPath: '/dashboard/products/category'
      preLoaderRoute: typeof DashboardProductsCategoryRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/products/add': {
      id: '/dashboard/products/add'
      path: '/products/add'
      fullPath: '/dashboard/products/add'
      preLoaderRoute: typeof DashboardProductsAddRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardApplicationsRoute: typeof DashboardApplicationsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardShopRoute: typeof DashboardShopRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProductsAddRoute: typeof DashboardProductsAddRoute
  DashboardProductsCategoryRoute: typeof DashboardProductsCategoryRoute
  DashboardProductsMy_productsRoute: typeof DashboardProductsMy_productsRoute
  DashboardUsersAdminsRoute: typeof DashboardUsersAdminsRoute
  DashboardUsersCustomersRoute: typeof DashboardUsersCustomersRoute
  DashboardUsersDriversRoute: typeof DashboardUsersDriversRoute
  DashboardUsersVendorsRoute: typeof DashboardUsersVendorsRoute
  DashboardOrdersIndexRoute: typeof DashboardOrdersIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardApplicationsRoute: DashboardApplicationsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardShopRoute: DashboardShopRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProductsAddRoute: DashboardProductsAddRoute,
  DashboardProductsCategoryRoute: DashboardProductsCategoryRoute,
  DashboardProductsMy_productsRoute: DashboardProductsMy_productsRoute,
  DashboardUsersAdminsRoute: DashboardUsersAdminsRoute,
  DashboardUsersCustomersRoute: DashboardUsersCustomersRoute,
  DashboardUsersDriversRoute: DashboardUsersDriversRoute,
  DashboardUsersVendorsRoute: DashboardUsersVendorsRoute,
  DashboardOrdersIndexRoute: DashboardOrdersIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CheckoutRoute: CheckoutRoute,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
